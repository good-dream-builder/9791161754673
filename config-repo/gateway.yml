server:
  port: 8443
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore/edge.p12
    key-store-password: password
    key-alias: localhost

app:
  config-server: localhost

# 시작 시간을 최소화하기 위한 것
ribbon:
  ServerListRefreshInterval: 5000
  NFLoadBalancerPingInterval: 5

spring:
  cloud:
    gateway:
      routes: # Java DSL 규칙으로 작성
        - id: product-composite # 경로 이름
          # 넷플릭스 유레카를 통해 product-composite이라는 서비스로 요청이 라우팅
          #  lb://는 스프링 클라우드 게이트웨이가 로드밸런서를 사용해 검색 서비스에서 대상(목적지)을 찾도록 지시
          uri: lb://product-composite
          predicates: # 라우팅 규칙이 처리할 요청
            - Path=/product-composite/** # ** : 0개 이상의 문자와 일치

        - id: oauth-server
          uri: lb://auth
          predicates:
            - Path=/oauth/**

        - id: eureka-api
          uri: http://${app.eureka-server}:8761
          predicates:
            - Path=/eureka/api/{segment} # {segment} : 0개 이상의 문자와 일치
          filters:
            - SetPath=/eureka/{segment}

        - id: eureka-web-start
          uri: http://${app.eureka-server}:8761
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/

        - id: eureka-web-other
          uri: http://${app.eureka-server}:8761
          predicates:
            - Path=/eureka/**

        - id: config-server
          uri: http://${app.config-server}:8888
          predicates:
            - Path=/config/**
          filters:
            - RewritePath=/config/(?<segment>.*), /$\{segment}

        - id: host_route_200
          uri: http://httpstat.us
          predicates:
            - Host=i.feel.lucky:8080
            - Path=/headerrouting/**
          filters:
            - SetPath=/200

        - id: host_route_418
          uri: http://httpstat.us
          predicates:
            - Host=im.a.teapot:8080
            - Path=/headerrouting/**
          filters:
            - SetPath=/418

        - id: host_route_501
          uri: http://httpstat.us
          predicates:
            - Path=/headerrouting/**
          filters:
            - SetPath=/501
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${app.auth-server}:9999/.well-known/jwks.json

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

---
spring:
  profiles: docker

app:
  config-server: config
